#!/bin/bash

update() {
  branch="$1"
  if [[ -z "$branch" ]]; then
    branch="master"
  fi

  sudo curl -s -S -o /usr/local/bin/hassctl https://raw.githubusercontent.com/dale3h/hassctl/$branch/hassctl && sudo chmod +x /usr/local/bin/hassctl
  # Reserved for future changes to update function
  # Reserved
  # Reserved
  # Reserved
  # Reserved
  # Reserved
  # Reserved
  # Reserved
  echo "hassctl has been updated to the latest $branch version"
  exit 0
}

usage() {
  echo "usage: $(basename $0) <start|stop|restart|kill|log|error|config|update>"
  exit 1
}

check_config() {
  check="$($hass --script check_config "$@")"
  [[ ! "$check" =~ "Failed config" ]]
}

hass="$(which hass)"
hass_service="home-assistant*"

if [ "$1" = "log" ]; then
  clear && sudo journalctl "${@:2}" --no-pager -f -u "$hass_service" -o cat | grep --color=always -iP '.*(error|errno|warning|exception|failure|failed|warn|except|fail).*|$'
elif [ "$1" = "error" ]; then
  clear && sudo journalctl "${@:2}" --no-pager -f -u "$hass_service" | grep --color=always -iP '^--.*--$|^(?!.*Current job from).*(error|errno|warning|exception|failure|failed|warn|except|fail).*'
elif [ "$1" = "kill" ]; then
  ps aux | grep python | grep hass | grep -vE grep | awk '{print $2}' | xargs kill -9
elif [ "$1" = "config" ]; then
  check_config "${@:2}"
  echo "$check"
elif [ "$1" = "update" ]; then
  update "${@:2}"
elif [ "$1" = "start" ] || [ "$1" = "restart" ]; then
  echo "Running configuration check..."
  check_config

  if [ "$?" != "0" ]; then
    echo "$check"
    exit 1
  fi

  echo "Configuration check passed."
  sudo systemctl "$@" "$hass_service"
else
  sudo systemctl "$@" "$hass_service"
fi
